# Run on master, develop and all feature-branches.

trigger:
- master
- develop
- feature/*
pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: Npm@1
  inputs:
    workingDirectory: 'Src/polangular'
    command: install

- task: Npm@1
  inputs:
    workingDirectory: 'Src/polangular'
    command: custom
    customCommand: run build-prod

# Build the .Net Core projects
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '--configuration Release'
    projects: '**/*.csproj'
    
    
# Run any tests present    
- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/Tests/*.csproj'
    publishTestResults: false

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/IDP.csproj'
    arguments: '--output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/APIOPEN.csproj'
    arguments: '--output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/PolAPI.csproj'
    arguments: '--output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

# this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'politikerafregning'

